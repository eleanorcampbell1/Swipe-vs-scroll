mem_data$num_features_remembered = as.numeric(as.character(mem_data$num_features_remembered))
mem_data$fridges_false_alarms = as.numeric(as.character(mem_data$fridges_false_alarms))
mem_data$features_false_alarms = as.numeric(as.character(mem_data$features_false_alarms))
mem_data$fridge_corr_hr = mem_data$num_fridges_remembered - mem_data$fridges_false_alarms
mem_data$feature_corr_hr = mem_data$num_features_remembered - mem_data$features_false_alarms
p2 = mem_data %>%
group_by(subj_id, key_condition) %>% summarize(mean_fridge_corr_hr=mean(fridge_corr_hr, na.rm=TRUE),
mean_feature_corr_hr = mean(feature_corr_hr, na.rm = TRUE)) %>%
group_by(key_condition) %>% summarize(mean_fridge_corr = mean(mean_fridge_corr_hr, na.rm = TRUE),
mean_feature_corr = mean(mean_feature_corr_hr, na.rm = TRUE),
ci_fridge = 1.96 * sd(mean_fridge_corr_hr) / sqrt(n()),
ci_feature = 1.96 * sd(mean_feature_corr_hr) / sqrt(n())) %>%
gather(key = "type", value = "mean_corr_hr", mean_fridge_corr, mean_feature_corr) %>%
gather(key = "ci", value = "ci_value", ci_fridge, ci_feature) %>%
ggplot(aes(x=key_condition, y=mean_corr_hr, group=type, fill=type)) +
geom_bar(stat="identity", position=position_dodge(0.8), width=0.8, color="black") +
geom_linerange(aes(ymin=mean_corr_hr-ci_value, ymax=mean_corr_hr+ci_value),  color="black", position=position_dodge(0.8)) +
scale_y_continuous(expand = c(0, 0)) + coord_cartesian(ylim=c(0, 20)) +
scale_fill_manual(values=c("#c0cfdc", '#2D618D', '#b7c5a7', "#4d7024")) +
theme_bw() + theme(axis.ticks.length=unit(-0.15, "cm"), aspect.ratio=1.5,
legend.position="bottom", panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), panel.border = element_rect(size=1)) +
labs(x="Condition", y="Correct Hit Rate")
p2
p3 = decision_data %>%
filter(test_part %in% c('scroll-decision', 'swipe-decision')) %>%
group_by(subj_id, test_part) %>% summarize(performance=mean(performance, na.rm=TRUE)) %>%
group_by(test_part) %>% summarize(mean=mean(performance, na.rm=TRUE), ci=1*sd(performance)/sqrt(n())) %>%
ggplot(aes(x=test_part, y=mean, group=test_part, fill=test_part)) +
geom_bar(stat="identity", position=position_dodge(0.8), width=0.8, color="black") +
geom_linerange(aes(ymin=mean-ci, ymax=mean+ci),  color="black", position=position_dodge(0.8)) +
scale_y_continuous(expand = c(0, 0)) + coord_cartesian(ylim=c(0, 1)) +
scale_fill_manual(values=c("#c0cfdc", '#2D618D', '#b7c5a7', "#4d7024")) +
theme_bw() + theme(axis.ticks.length=unit(-0.15, "cm"), aspect.ratio=1.5,
legend.position="bottom", panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), panel.border = element_rect(size=1)) +
labs(x="Condition", y="Number of Liked")
p3
p3 = decision_data %>%
filter(test_part %in% c('scroll-decision', 'swipe-decision')) %>%
group_by(subj_id, test_part) %>% summarize(performance=mean(performance, na.rm=TRUE)) %>%
group_by(test_part) %>% summarize(mean=mean(performance, na.rm=TRUE), ci=1*sd(performance)/sqrt(n())) %>%
ggplot(aes(x=test_part, y=mean, group=test_part, fill=test_part)) +
geom_bar(stat="identity", position=position_dodge(0.8), width=0.8, color="black") +
geom_linerange(aes(ymin=mean-ci, ymax=mean+ci),  color="black", position=position_dodge(0.8)) +
scale_y_continuous(expand = c(0, 0)) + coord_cartesian(ylim=c(0, 1)) +
scale_fill_manual(values=c("#c0cfdc", '#2D618D', '#b7c5a7', "#4d7024")) +
theme_bw() + theme(axis.ticks.length=unit(-0.15, "cm"), aspect.ratio=1.5,
legend.position="bottom", panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), panel.border = element_rect(size=1)) +
labs(x="Condition", y="% Correct Decision")
p3
pkgs = c("tidyverse", "lsr", "ggpubr", "ez", "pwr", "psych", "gridExtra",
"gtools", "ggplot2", "ggbeeswarm", "GGally", "BayesFactor", "svMisc",
"cowplot", "gghighlight", "scales")
lapply(pkgs, require, character.only = TRUE)
rm(list = ls())
# Joan Danielle K. Ongchoco
# This code analyzes data for the Swiping/Scrolling - EC - Decisionmaking experiments.
# Load files
filenames = list.files(pattern=".csv")
ad = do.call("smartbind",lapply(filenames,read.csv,header=TRUE))
# How does swiping vs. scrolling impact decisions? (DV = best decision?)
#initial_data = ad %>% filter(trial_index==3) %>%
initial_data = ad %>% filter(test_part %in% c('scroll-decision', 'swipe-decision')) %>%
select(subj_id, test_part, best_decision)
decision_data = ad %>% filter(trial_type=='ec-decision-debrief') %>%
select(subj_id, test_part, most_likely_purchase)
decision_data$test_part = initial_data$test_part
decision_data$best_decision = initial_data$best_decision
decision_data$best_decision = as.character(decision_data$best_decision)
decision_data$most_likely_purchase = as.character(decision_data$most_likely_purchase)
decision_data$performance = decision_data$best_decision == decision_data$most_likely_purchase
# How does swiping vs. scrolling impact cognitive flexibility? (DV = stroop)
stroop_data = ad %>% filter(test_part=='stroop',
stimulus_text %in% c("blue", "red", "green", "yellow"),
font_color %in% c("blue", "red", "green", "yellow")) %>%
select(subj_id, test_part, key_press, stimulus_text, font_color, rt, key_condition)
stroop_data$stimulus_text = as.character(stroop_data$stimulus_text)
stroop_data$font_color = as.character(stroop_data$font_color)
stroop_data$congruent_condition = stroop_data$stimulus_text == stroop_data$font_color
stroop_data$rt = as.numeric(as.character(stroop_data$rt))
stroop_data$correct_answer = ""
for (i in 1:nrow(stroop_data)){
stroop_data$correct_answer[i] = toupper(substring(stroop_data$font_color[i], 1, 1))
}
stroop_data$performance = stroop_data$key_press == stroop_data$correct_answer
stroop_data = stroop_data %>% filter(rt < 4000)
p1 = stroop_data %>% filter(performance==TRUE) %>%
group_by(subj_id, test_part, key_condition, congruent_condition) %>% summarize(rt=mean(rt, na.rm=TRUE)) %>%
group_by(test_part, key_condition, congruent_condition) %>% summarize(mean=mean(rt, na.rm=TRUE), ci=1.96*sd(rt)/sqrt(n())) %>%
ggplot(aes(x=key_condition, y=mean, group=congruent_condition, fill=congruent_condition)) +
geom_bar(stat="identity", position=position_dodge(0.8), width=0.8, color="black") +
geom_linerange(aes(ymin=mean-ci, ymax=mean+ci),  color="black", position=position_dodge(0.8)) +
scale_y_continuous(expand = c(0, 0)) + #coord_cartesian(ylim=c(0, 1)) +
scale_fill_manual(values=c("#c0cfdc", '#2D618D', '#b7c5a7', "#4d7024")) +
theme_bw() + theme(axis.ticks.length=unit(-0.15, "cm"), aspect.ratio=1.5,
legend.position="bottom", panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), panel.border = element_rect(size=1)) +
labs(x="Condition", y="Avg Reaction Time (ms)")
p1
# How does swiping vs. scrolling impact memory? (DV = number of hits/fas)
mem_data = ad %>% filter(test_part=='decision-debrief') %>%
select(subj_id, test_part, key_condition, num_fridges_remembered, num_features_remembered, fridges_false_alarms, features_false_alarms)
mem_data$num_fridges_remembered = as.numeric(as.character(mem_data$num_fridges_remembered))
mem_data$num_features_remembered = as.numeric(as.character(mem_data$num_features_remembered))
mem_data$fridges_false_alarms = as.numeric(as.character(mem_data$fridges_false_alarms))
mem_data$features_false_alarms = as.numeric(as.character(mem_data$features_false_alarms))
mem_data$fridge_corr_hr = mem_data$num_fridges_remembered - mem_data$fridges_false_alarms
mem_data$feature_corr_hr = mem_data$num_features_remembered - mem_data$features_false_alarms
p2 = mem_data %>%
group_by(subj_id, key_condition) %>% summarize(mean_fridge_corr_hr=mean(fridge_corr_hr, na.rm=TRUE),
mean_feature_corr_hr = mean(feature_corr_hr, na.rm = TRUE)) %>%
group_by(key_condition) %>% summarize(mean_fridge_corr = mean(mean_fridge_corr_hr, na.rm = TRUE),
mean_feature_corr = mean(mean_feature_corr_hr, na.rm = TRUE),
ci_fridge = 1.96 * sd(mean_fridge_corr_hr) / sqrt(n()),
ci_feature = 1.96 * sd(mean_feature_corr_hr) / sqrt(n())) %>%
gather(key = "type", value = "mean_corr_hr", mean_fridge_corr, mean_feature_corr) %>%
gather(key = "ci", value = "ci_value", ci_fridge, ci_feature) %>%
ggplot(aes(x=key_condition, y=mean_corr_hr, group=type, fill=type)) +
geom_bar(stat="identity", position=position_dodge(0.8), width=0.8, color="black") +
geom_linerange(aes(ymin=mean_corr_hr-ci_value, ymax=mean_corr_hr+ci_value),  color="black", position=position_dodge(0.8)) +
scale_y_continuous(expand = c(0, 0)) + coord_cartesian(ylim=c(0, 20)) +
scale_fill_manual(values=c("#c0cfdc", '#2D618D', '#b7c5a7', "#4d7024")) +
theme_bw() + theme(axis.ticks.length=unit(-0.15, "cm"), aspect.ratio=1.5,
legend.position="bottom", panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), panel.border = element_rect(size=1)) +
labs(x="Condition", y="Correct Hit Rate")
p2
p3 = decision_data %>%
filter(test_part %in% c('scroll-decision', 'swipe-decision')) %>%
group_by(subj_id, test_part) %>% summarize(performance=mean(performance, na.rm=TRUE)) %>%
group_by(test_part) %>% summarize(mean=mean(performance, na.rm=TRUE), ci=1*sd(performance)/sqrt(n())) %>%
ggplot(aes(x=test_part, y=mean, group=test_part, fill=test_part)) +
geom_bar(stat="identity", position=position_dodge(0.8), width=0.8, color="black") +
geom_linerange(aes(ymin=mean-ci, ymax=mean+ci),  color="black", position=position_dodge(0.8)) +
scale_y_continuous(expand = c(0, 0)) + coord_cartesian(ylim=c(0, 1)) +
scale_fill_manual(values=c("#c0cfdc", '#2D618D', '#b7c5a7', "#4d7024")) +
theme_bw() + theme(axis.ticks.length=unit(-0.15, "cm"), aspect.ratio=1.5,
legend.position="bottom", panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), panel.border = element_rect(size=1)) +
labs(x="Condition", y="% Correct Decision")
p3
p1
p2
p3
p1
p2
p3
View(mem_data)
ezANOVA(data=mem_data,
dv=feature_corr_hr,
wid=subj_id,
between=c(key_condition))
View(decision_data)
decision_data %>% group_by(test_part, performance) %>% summarize(total=n())
pkgs = c("tidyverse", "lsr", "ggpubr", "ez", "pwr", "psych", "gridExtra",
"gtools", "ggplot2", "ggbeeswarm", "GGally", "BayesFactor", "svMisc",
"cowplot", "gghighlight", "scales")
lapply(pkgs, require, character.only = TRUE)
rm(list = ls())
# Joan Danielle K. Ongchoco
# This code analyzes data for the Swiping/Scrolling - EC - Decisionmaking experiments.
# Load files
filenames = list.files(pattern=".csv")
ad = do.call("smartbind",lapply(filenames,read.csv,header=TRUE))
# How does swiping vs. scrolling impact decisions? (DV = best decision?)
#initial_data = ad %>% filter(trial_index==3) %>%
initial_data = ad %>% filter(test_part %in% c('scroll-decision', 'swipe-decision')) %>%
select(subj_id, test_part, best_decision)
decision_data = ad %>% filter(trial_type=='ec-decision-debrief') %>%
select(subj_id, test_part, most_likely_purchase)
decision_data$test_part = initial_data$test_part
decision_data$best_decision = initial_data$best_decision
decision_data$best_decision = as.character(decision_data$best_decision)
decision_data$most_likely_purchase = as.character(decision_data$most_likely_purchase)
decision_data$performance = decision_data$best_decision == decision_data$most_likely_purchase
# How does swiping vs. scrolling impact cognitive flexibility? (DV = stroop)
stroop_data = ad %>% filter(test_part=='stroop',
stimulus_text %in% c("blue", "red", "green", "yellow"),
font_color %in% c("blue", "red", "green", "yellow")) %>%
select(subj_id, test_part, key_press, stimulus_text, font_color, rt, key_condition)
stroop_data$stimulus_text = as.character(stroop_data$stimulus_text)
stroop_data$font_color = as.character(stroop_data$font_color)
stroop_data$congruent_condition = stroop_data$stimulus_text == stroop_data$font_color
stroop_data$rt = as.numeric(as.character(stroop_data$rt))
stroop_data$correct_answer = ""
for (i in 1:nrow(stroop_data)){
stroop_data$correct_answer[i] = toupper(substring(stroop_data$font_color[i], 1, 1))
}
stroop_data$performance = stroop_data$key_press == stroop_data$correct_answer
stroop_data = stroop_data %>% filter(rt < 4000)
p1 = stroop_data %>% filter(performance==TRUE) %>%
group_by(subj_id, test_part, key_condition, congruent_condition) %>% summarize(rt=mean(rt, na.rm=TRUE)) %>%
group_by(test_part, key_condition, congruent_condition) %>% summarize(mean=mean(rt, na.rm=TRUE), ci=1.96*sd(rt)/sqrt(n())) %>%
ggplot(aes(x=key_condition, y=mean, group=congruent_condition, fill=congruent_condition)) +
geom_bar(stat="identity", position=position_dodge(0.8), width=0.8, color="black") +
geom_linerange(aes(ymin=mean-ci, ymax=mean+ci),  color="black", position=position_dodge(0.8)) +
scale_y_continuous(expand = c(0, 0)) + #coord_cartesian(ylim=c(0, 1)) +
scale_fill_manual(values=c("#c0cfdc", '#2D618D', '#b7c5a7', "#4d7024")) +
theme_bw() + theme(axis.ticks.length=unit(-0.15, "cm"), aspect.ratio=1.5,
legend.position="bottom", panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), panel.border = element_rect(size=1)) +
labs(x="Condition", y="Avg Reaction Time (ms)")
p1
# How does swiping vs. scrolling impact memory? (DV = number of hits/fas)
mem_data = ad %>% filter(test_part=='decision-debrief') %>%
select(subj_id, test_part, key_condition, num_fridges_remembered, num_features_remembered, fridges_false_alarms, features_false_alarms)
mem_data$num_fridges_remembered = as.numeric(as.character(mem_data$num_fridges_remembered))
mem_data$num_features_remembered = as.numeric(as.character(mem_data$num_features_remembered))
mem_data$fridges_false_alarms = as.numeric(as.character(mem_data$fridges_false_alarms))
mem_data$features_false_alarms = as.numeric(as.character(mem_data$features_false_alarms))
mem_data$fridge_corr_hr = mem_data$num_fridges_remembered - mem_data$fridges_false_alarms
mem_data$feature_corr_hr = mem_data$num_features_remembered - mem_data$features_false_alarms
p2 = mem_data %>%
group_by(subj_id, key_condition) %>% summarize(mean_fridge_corr_hr=mean(fridge_corr_hr, na.rm=TRUE),
mean_feature_corr_hr = mean(feature_corr_hr, na.rm = TRUE)) %>%
group_by(key_condition) %>% summarize(mean_fridge_corr = mean(mean_fridge_corr_hr, na.rm = TRUE),
mean_feature_corr = mean(mean_feature_corr_hr, na.rm = TRUE),
ci_fridge = 1.96 * sd(mean_fridge_corr_hr) / sqrt(n()),
ci_feature = 1.96 * sd(mean_feature_corr_hr) / sqrt(n())) %>%
gather(key = "type", value = "mean_corr_hr", mean_fridge_corr, mean_feature_corr) %>%
gather(key = "ci", value = "ci_value", ci_fridge, ci_feature) %>%
ggplot(aes(x=key_condition, y=mean_corr_hr, group=type, fill=type)) +
geom_bar(stat="identity", position=position_dodge(0.8), width=0.8, color="black") +
geom_linerange(aes(ymin=mean_corr_hr-ci_value, ymax=mean_corr_hr+ci_value),  color="black", position=position_dodge(0.8)) +
scale_y_continuous(expand = c(0, 0)) + coord_cartesian(ylim=c(0, 20)) +
scale_fill_manual(values=c("#c0cfdc", '#2D618D', '#b7c5a7', "#4d7024")) +
theme_bw() + theme(axis.ticks.length=unit(-0.15, "cm"), aspect.ratio=1.5,
legend.position="bottom", panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), panel.border = element_rect(size=1)) +
labs(x="Condition", y="Correct Hit Rate")
p2
p3 = decision_data %>%
filter(test_part %in% c('scroll-decision', 'swipe-decision')) %>%
group_by(subj_id, test_part) %>% summarize(performance=mean(performance, na.rm=TRUE)) %>%
group_by(test_part) %>% summarize(mean=mean(performance, na.rm=TRUE), ci=1*sd(performance)/sqrt(n())) %>%
ggplot(aes(x=test_part, y=mean, group=test_part, fill=test_part)) +
geom_bar(stat="identity", position=position_dodge(0.8), width=0.8, color="black") +
geom_linerange(aes(ymin=mean-ci, ymax=mean+ci),  color="black", position=position_dodge(0.8)) +
scale_y_continuous(expand = c(0, 0)) + coord_cartesian(ylim=c(0, 1)) +
scale_fill_manual(values=c("#c0cfdc", '#2D618D', '#b7c5a7', "#4d7024")) +
theme_bw() + theme(axis.ticks.length=unit(-0.15, "cm"), aspect.ratio=1.5,
legend.position="bottom", panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), panel.border = element_rect(size=1)) +
labs(x="Condition", y="% Correct Decision")
p3
ezANOVA(data=mem_data,
dv=feature_corr_hr,
wid=subj_id,
between=c(key_condition))
decision_data %>% group_by(test_part, performance) %>% summarize(total=n())
p1 = stroop_data %>% filter(performance==TRUE) %>%
group_by(subj_id, test_part, key_condition, congruent_condition) %>% summarize(rt=mean(rt, na.rm=TRUE)) %>%
group_by(test_part, key_condition, congruent_condition) %>% summarize(mean=mean(rt, na.rm=TRUE), ci=1.96*sd(rt)/sqrt(n())) %>%
ggplot(aes(x=key_condition, y=mean, group=congruent_condition, fill=congruent_condition)) +
geom_bar(stat="identity", position=position_dodge(0.8), width=0.8, color="black") +
geom_linerange(aes(ymin=mean-ci, ymax=mean+ci),  color="black", position=position_dodge(0.8)) +
scale_y_continuous(expand = c(0, 0)) + #coord_cartesian(ylim=c(0, 1)) +
scale_fill_manual(values=c("#c0cfdc", '#2D618D', '#b7c5a7', "#4d7024")) +
theme_bw() + theme(axis.ticks.length=unit(-0.15, "cm"), aspect.ratio=1.5,
legend.position="bottom", panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), panel.border = element_rect(size=1)) +
labs(x="Condition", y="Avg Reaction Time (ms)")
p1
# How does swiping vs. scrolling impact memory? (DV = number of hits/fas)
mem_data = ad %>% filter(test_part=='decision-debrief') %>%
select(subj_id, test_part, key_condition, num_fridges_remembered, num_features_remembered, fridges_false_alarms, features_false_alarms)
mem_data$num_fridges_remembered = as.numeric(as.character(mem_data$num_fridges_remembered))
mem_data$num_features_remembered = as.numeric(as.character(mem_data$num_features_remembered))
mem_data$fridges_false_alarms = as.numeric(as.character(mem_data$fridges_false_alarms))
mem_data$features_false_alarms = as.numeric(as.character(mem_data$features_false_alarms))
mem_data$fridge_corr_hr = mem_data$num_fridges_remembered - mem_data$fridges_false_alarms
mem_data$feature_corr_hr = mem_data$num_features_remembered - mem_data$features_false_alarms
p2 = mem_data %>%
group_by(subj_id, key_condition) %>% summarize(mean_fridge_corr_hr=mean(fridge_corr_hr, na.rm=TRUE),
mean_feature_corr_hr = mean(feature_corr_hr, na.rm = TRUE)) %>%
group_by(key_condition) %>% summarize(mean_fridge_corr = mean(mean_fridge_corr_hr, na.rm = TRUE),
mean_feature_corr = mean(mean_feature_corr_hr, na.rm = TRUE),
ci_fridge = 1.96 * sd(mean_fridge_corr_hr) / sqrt(n()),
ci_feature = 1.96 * sd(mean_feature_corr_hr) / sqrt(n())) %>%
gather(key = "type", value = "mean_corr_hr", mean_fridge_corr, mean_feature_corr) %>%
gather(key = "ci", value = "ci_value", ci_fridge, ci_feature) %>%
ggplot(aes(x=key_condition, y=mean_corr_hr, group=type, fill=type)) +
geom_bar(stat="identity", position=position_dodge(0.8), width=0.8, color="black") +
geom_linerange(aes(ymin=mean_corr_hr-ci_value, ymax=mean_corr_hr+ci_value),  color="black", position=position_dodge(0.8)) +
scale_y_continuous(expand = c(0, 0)) + coord_cartesian(ylim=c(0, 20)) +
scale_fill_manual(values=c("#c0cfdc", '#2D618D', '#b7c5a7', "#4d7024")) +
theme_bw() + theme(axis.ticks.length=unit(-0.15, "cm"), aspect.ratio=1.5,
legend.position="bottom", panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), panel.border = element_rect(size=1)) +
labs(x="Condition", y="Correct Hit Rate")
p2
p2 = mem_data %>%
group_by(subj_id, key_condition) %>% summarize(mean_fridge_corr_hr=mean(fridge_corr_hr, na.rm=TRUE),
mean_feature_corr_hr = mean(feature_corr_hr, na.rm = TRUE)) %>%
group_by(key_condition) %>% summarize(mean_fridge_corr = mean(mean_fridge_corr_hr, na.rm = TRUE),
mean_feature_corr = mean(mean_feature_corr_hr, na.rm = TRUE),
ci_fridge = 1.96 * sd(mean_fridge_corr_hr) / sqrt(n()),
ci_feature = 1.96 * sd(mean_feature_corr_hr) / sqrt(n())) %>%
gather(key = "type", value = "mean_corr_hr", mean_fridge_corr, mean_feature_corr) %>%
gather(key = "ci", value = "ci_value", ci_fridge, ci_feature) %>%
ggplot(aes(x=key_condition, y=mean_corr_hr, group=type, fill=type)) +
geom_bar(stat="identity", position=position_dodge(0.8), width=0.8, color="black") +
geom_linerange(aes(ymin=mean_corr_hr-ci_value, ymax=mean_corr_hr+ci_value),  color="black", position=position_dodge(0.8)) +
scale_x_discrete(labels = c("mean_feature_corr" = "Features", "mean_fridge_corr" = "Fridges")) +
scale_y_continuous(expand = c(0, 0)) + coord_cartesian(ylim=c(0, 20)) +
scale_fill_manual(values=c("#c0cfdc", '#2D618D', '#b7c5a7', "#4d7024")) +
theme_bw() + theme(axis.ticks.length=unit(-0.15, "cm"), aspect.ratio=1.5,
legend.position="bottom", panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), panel.border = element_rect(size=1)) +
labs(x="Condition", y="Correct Hit Rate")
p2
p2 = mem_data %>%
group_by(subj_id, key_condition) %>% summarize(mean_fridge_corr_hr=mean(fridge_corr_hr, na.rm=TRUE),
mean_feature_corr_hr = mean(feature_corr_hr, na.rm = TRUE)) %>%
group_by(key_condition) %>% summarize(mean_fridge_corr = mean(mean_fridge_corr_hr, na.rm = TRUE),
mean_feature_corr = mean(mean_feature_corr_hr, na.rm = TRUE),
ci_fridge = 1.96 * sd(mean_fridge_corr_hr) / sqrt(n()),
ci_feature = 1.96 * sd(mean_feature_corr_hr) / sqrt(n())) %>%
gather(key = "type", value = "mean_corr_hr", mean_fridge_corr, mean_feature_corr) %>%
gather(key = "ci", value = "ci_value", ci_fridge, ci_feature) %>%
ggplot(aes(x=key_condition, y=mean_corr_hr, group=type, fill=type)) +
geom_bar(stat="identity", position=position_dodge(0.8), width=0.8, color="black") +
geom_linerange(aes(ymin=mean_corr_hr-ci_value, ymax=mean_corr_hr+ci_value),  color="black", position=position_dodge(0.8)) +
scale_x_discrete(labels = c("mean_feature_corr" = "Features", "mean_fridge_corr" = "Fridges")) +
scale_y_continuous(expand = c(0, 0)) + coord_cartesian(ylim=c(0, 20)) +
scale_fill_manual(values=c("#c0cfdc", '#2D618D', '#b7c5a7', "#4d7024")) +
theme_bw() + theme(axis.ticks.length=unit(-0.15, "cm"), aspect.ratio=1.5,
legend.position="bottom", panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), panel.border = element_rect(size=1)) +
labs(x="Condition", y="Correct Hit Rate")
p2
p2 = mem_data %>%
group_by(subj_id, key_condition) %>% summarize(mean_fridge_corr_hr=mean(fridge_corr_hr, na.rm=TRUE),
mean_feature_corr_hr = mean(feature_corr_hr, na.rm = TRUE)) %>%
group_by(key_condition) %>% summarize(mean_fridge_corr = mean(mean_fridge_corr_hr, na.rm = TRUE),
mean_feature_corr = mean(mean_feature_corr_hr, na.rm = TRUE),
ci_fridge = 1.96 * sd(mean_fridge_corr_hr) / sqrt(n()),
ci_feature = 1.96 * sd(mean_feature_corr_hr) / sqrt(n())) %>%
gather(key = "type", value = "mean_corr_hr", mean_fridge_corr, mean_feature_corr) %>%
gather(key = "ci", value = "ci_value", ci_fridge, ci_feature) %>%
ggplot(aes(x=key_condition, y=mean_corr_hr, group=type, fill=type)) +
geom_bar(stat="identity", position=position_dodge(0.8), width=0.8, color="black") +
geom_linerange(aes(ymin=mean_corr_hr-ci_value, ymax=mean_corr_hr+ci_value),  color="black", position=position_dodge(0.8)) +
scale_y_continuous(expand = c(0, 0)) + coord_cartesian(ylim=c(0, 20)) +
scale_fill_manual(values=c("#c0cfdc", '#2D618D', '#b7c5a7', "#4d7024"),
labels = c("mean_feature_corr" = "Features", "mean_fridge_corr" = "Fridges")) +
theme_bw() + theme(axis.ticks.length=unit(-0.15, "cm"), aspect.ratio=1.5,
legend.position="bottom", panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), panel.border = element_rect(size=1)) +
labs(x="Condition", y="Correct Hit Rate")
p2
p2 = mem_data %>%
group_by(subj_id, key_condition) %>% summarize(mean_fridge_corr_hr=mean(fridge_corr_hr, na.rm=TRUE),
mean_feature_corr_hr = mean(feature_corr_hr, na.rm = TRUE)) %>%
group_by(key_condition) %>% summarize(mean_fridge_corr = mean(mean_fridge_corr_hr, na.rm = TRUE),
mean_feature_corr = mean(mean_feature_corr_hr, na.rm = TRUE),
ci_fridge = 1.96 * sd(mean_fridge_corr_hr) / sqrt(n()),
ci_feature = 1.96 * sd(mean_feature_corr_hr) / sqrt(n())) %>%
gather(key = "type", value = "mean_corr_hr", mean_fridge_corr, mean_feature_corr) %>%
gather(key = "ci", value = "ci_value", ci_fridge, ci_feature) %>%
ggplot(aes(x=key_condition, y=mean_corr_hr, group=type, fill=type)) +
geom_bar(stat="identity", position=position_dodge(0.8), width=0.8, color="black") +
geom_linerange(aes(ymin=mean_corr_hr-ci_value, ymax=mean_corr_hr+ci_value),  color="black", position=position_dodge(0.8)) +
scale_y_continuous(expand = c(0, 0)) + coord_cartesian(ylim=c(0, 20)) +
scale_fill_manual(values=c("#c0cfdc", '#2D618D', '#b7c5a7', "#4d7024"),
labels = c("mean_feature_corr" = "features", "mean_fridge_corr" = "fridges")) +
theme_bw() + theme(axis.ticks.length=unit(-0.15, "cm"), aspect.ratio=1.5,
legend.position="bottom", panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), panel.border = element_rect(size=1)) +
labs(x="Condition", y="Correct Hit Rate")
p2
ggsave()
ggsave(decision-corrhr)
ggsave(decision_corrHr)
ggsave(filename = "decision_corrHr.pdf")
p3 = decision_data %>%
filter(test_part %in% c('scroll-decision', 'swipe-decision')) %>%
group_by(subj_id, test_part) %>% summarize(performance=mean(performance, na.rm=TRUE)) %>%
group_by(test_part) %>% summarize(mean=mean(performance, na.rm=TRUE), ci=1*sd(performance)/sqrt(n())) %>%
ggplot(aes(x=test_part, y=mean, group=test_part, fill=test_part)) +
geom_bar(stat="identity", position=position_dodge(0.8), width=0.8, color="black") +
geom_linerange(aes(ymin=mean-ci, ymax=mean+ci),  color="black", position=position_dodge(0.8)) +
scale_y_continuous(expand = c(0, 0)) + coord_cartesian(ylim=c(0, 1)) +
scale_fill_manual(values=c("#c0cfdc", '#2D618D', '#b7c5a7', "#4d7024")) +
theme_bw() + theme(axis.ticks.length=unit(-0.15, "cm"), aspect.ratio=1.5,
legend.position="bottom", panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), panel.border = element_rect(size=1)) +
labs(x="Condition", y="% Correct Decision")
p3
ggsave(filename = "decision_percentCorrDecision.pdf")
pkgs = c("tidyverse", "lsr", "ggpubr", "ez", "pwr", "psych", "gridExtra",
"gtools", "ggplot2", "ggbeeswarm", "GGally", "BayesFactor", "svMisc",
"cowplot", "gghighlight", "scales")
# install.packages(pkgs)
lapply(pkgs, require, character.only = TRUE)
rm(list = ls())
# Joan Danielle K. Ongchoco
# This code analyzes data for the Swiping/Scrolling - EC - Aesthetic experiments.
# Load files
filenames = list.files(pattern=".csv")
ad = do.call("smartbind",lapply(filenames,read.csv,header=TRUE))
# How does swiping vs. scrolling impact aesthetic experience? (DV = number of liked of images)
like_data = ad %>% filter(trial_index==3) %>%
select(subj_id, test_part, num_liked, num_unliked)
setwd("~/Downloads/Data - EC/aesthetic")
pkgs = c("tidyverse", "lsr", "ggpubr", "ez", "pwr", "psych", "gridExtra",
"gtools", "ggplot2", "ggbeeswarm", "GGally", "BayesFactor", "svMisc",
"cowplot", "gghighlight", "scales")
# install.packages(pkgs)
lapply(pkgs, require, character.only = TRUE)
rm(list = ls())
# Joan Danielle K. Ongchoco
# This code analyzes data for the Swiping/Scrolling - EC - Aesthetic experiments.
# Load files
filenames = list.files(pattern=".csv")
ad = do.call("smartbind",lapply(filenames,read.csv,header=TRUE))
# How does swiping vs. scrolling impact aesthetic experience? (DV = number of liked of images)
like_data = ad %>% filter(trial_index==3) %>%
select(subj_id, test_part, num_liked, num_unliked)
# How does swiping vs. scrolling impact cognitive flexibility? (DV = stroop)
stroop_data = ad %>% filter(test_part=='stroop',
stimulus_text %in% c("blue", "red", "green", "yellow"),
font_color %in% c("blue", "red", "green", "yellow")) %>%
select(subj_id, test_part, key_press, stimulus_text, font_color, rt, key_condition)
stroop_data$stimulus_text = as.character(stroop_data$stimulus_text)
stroop_data$font_color = as.character(stroop_data$font_color)
stroop_data$congruent_condition = stroop_data$stimulus_text == stroop_data$font_color
stroop_data$rt = as.numeric(as.character(stroop_data$rt))
stroop_data$correct_answer = ""
for (i in 1:nrow(stroop_data)){
stroop_data$correct_answer[i] = toupper(substring(stroop_data$font_color[i], 1, 1))
}
stroop_data$performance = stroop_data$key_press == stroop_data$correct_answer
stroop_data = stroop_data %>% filter(rt < 4000)
p1 = stroop_data %>%
group_by(subj_id, test_part, key_condition, congruent_condition) %>% summarize(rt=mean(rt, na.rm=TRUE)) %>%
group_by(test_part, key_condition, congruent_condition) %>% summarize(mean=mean(rt, na.rm=TRUE), ci=1.96*sd(rt)/sqrt(n())) %>%
ggplot(aes(x=key_condition, y=mean, group=congruent_condition, fill=congruent_condition)) +
geom_bar(stat="identity", position=position_dodge(0.8), width=0.8, color="black") +
geom_linerange(aes(ymin=mean-ci, ymax=mean+ci),  color="black", position=position_dodge(0.8)) +
scale_y_continuous(expand = c(0, 0)) + #coord_cartesian(ylim=c(0, 1)) +
scale_fill_manual(values=c("#c0cfdc", '#2D618D', '#b7c5a7', "#4d7024")) +
theme_bw() + theme(axis.ticks.length=unit(-0.15, "cm"), aspect.ratio=1.5,
legend.position="bottom", panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), panel.border = element_rect(size=1)) +
labs(x="Condition", y="Avg Reaction Time (ms)")
p1
# How does swiping vs. scrolling impact memory? (DV = number of hits/fas)
mem_data = ad %>% filter(test_part=='aesthetic-debrief') %>%
select(subj_id, test_part, key_condition, num_images_remembered, num_false_alarms)
mem_data$num_images_remembered = as.numeric(as.character(mem_data$num_images_remembered))
mem_data$num_false_alarms = as.numeric(as.character(mem_data$num_false_alarms))
mem_data$corr_hr = mem_data$num_images_remembered - mem_data$num_false_alarms
p2 = mem_data %>%
group_by(subj_id, key_condition) %>% summarize(corr_hr=mean(corr_hr, na.rm=TRUE)) %>%
group_by(key_condition) %>% summarize(mean=mean(corr_hr, na.rm=TRUE), ci=1.96*sd(corr_hr)/sqrt(n())) %>%
ggplot(aes(x=key_condition, y=mean, group=key_condition, fill=key_condition)) +
geom_bar(stat="identity", position=position_dodge(0.8), width=0.8, color="black") +
geom_linerange(aes(ymin=mean-ci, ymax=mean+ci),  color="black", position=position_dodge(0.8)) +
scale_y_continuous(expand = c(0, 0)) + coord_cartesian(ylim=c(0, 20)) +
scale_fill_manual(values=c("#c0cfdc", '#2D618D', '#b7c5a7', "#4d7024")) +
theme_bw() + theme(axis.ticks.length=unit(-0.15, "cm"), aspect.ratio=1.5,
legend.position="bottom", panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), panel.border = element_rect(size=1)) +
labs(x="Condition", y="Avg Correct Hit Rate")
p2
p3 = like_data %>%
filter(test_part %in% c('scroll-aesthetic', 'swipe-aesthetic')) %>%
group_by(subj_id, test_part) %>% summarize(num_liked=mean(num_liked, na.rm=TRUE)) %>%
group_by(test_part) %>% summarize(mean=mean(num_liked, na.rm=TRUE), ci=1.96*sd(num_liked)/sqrt(n())) %>%
ggplot(aes(x=test_part, y=mean, group=test_part, fill=test_part)) +
geom_bar(stat="identity", position=position_dodge(0.8), width=0.8, color="black") +
geom_linerange(aes(ymin=mean-ci, ymax=mean+ci),  color="black", position=position_dodge(0.8)) +
scale_y_continuous(expand = c(0, 0)) + coord_cartesian(ylim=c(0, 30)) +
scale_fill_manual(values=c("#c0cfdc", '#2D618D', '#b7c5a7', "#4d7024")) +
theme_bw() + theme(axis.ticks.length=unit(-0.15, "cm"), aspect.ratio=1.5,
legend.position="bottom", panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), panel.border = element_rect(size=1)) +
labs(x="Condition", y="Number of Liked")
p3
p3 = like_data %>%
filter(test_part %in% c('scroll-aesthetic', 'swipe-aesthetic')) %>%
group_by(subj_id, test_part) %>% summarize(num_liked=mean(num_liked, na.rm=TRUE)) %>%
group_by(test_part) %>% summarize(mean=mean(num_liked, na.rm=TRUE), ci=1.96*sd(num_liked)/sqrt(n())) %>%
ggplot(aes(x=test_part, y=mean, group=test_part, fill=test_part)) +
geom_bar(stat="identity", position=position_dodge(0.8), width=0.8, color="black") +
geom_linerange(aes(ymin=mean-ci, ymax=mean+ci),  color="black", position=position_dodge(0.8)) +
scale_y_continuous(expand = c(0, 0)) + coord_cartesian(ylim=c(0, 30)) +
scale_fill_manual(values=c("#c0cfdc", '#2D618D', '#b7c5a7', "#4d7024")) +
theme_bw() + theme(axis.ticks.length=unit(-0.15, "cm"), aspect.ratio=1.5,
legend.position="bottom", panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), panel.border = element_rect(size=1)) +
labs(x="Condition", y="Number of Liked Images")
p3
ggsave(filename = "aesthetic_numLiked.pdf")
p2 = mem_data %>%
group_by(subj_id, key_condition) %>% summarize(corr_hr=mean(corr_hr, na.rm=TRUE)) %>%
group_by(key_condition) %>% summarize(mean=mean(corr_hr, na.rm=TRUE), ci=1.96*sd(corr_hr)/sqrt(n())) %>%
ggplot(aes(x=key_condition, y=mean, group=key_condition, fill=key_condition)) +
geom_bar(stat="identity", position=position_dodge(0.8), width=0.8, color="black") +
geom_linerange(aes(ymin=mean-ci, ymax=mean+ci),  color="black", position=position_dodge(0.8)) +
scale_y_continuous(expand = c(0, 0)) + coord_cartesian(ylim=c(0, 20)) +
scale_fill_manual(values=c("#c0cfdc", '#2D618D', '#b7c5a7', "#4d7024")) +
theme_bw() + theme(axis.ticks.length=unit(-0.15, "cm"), aspect.ratio=1.5,
legend.position="bottom", panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), panel.border = element_rect(size=1)) +
labs(x="Condition", y="Avg Correct Hit Rate")
p2
ggsave(filname = "aesthetic_corrHr.pdf")
ggsave(filename = "aesthetic_corrHr.pdf")
